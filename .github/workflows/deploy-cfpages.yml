name: Deploy SSG to Cloudflare Pages

on:
  # Runs on pushes targeting all branches
  # The main branch is for production, others for preview
  push:

  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow the Cloudflare Pages action to create a Deployment
permissions:
  contents: read
  deployments: write

jobs:
  # Build and deploy job
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout game data
        uses: actions/checkout@v3
        with:
          repository: Kengxxiao/ArknightsGameData
          path: ArknightsGameData
      - name: Set environment variables
        run: |
          echo "GAME_DATA_ROOT_PATH=$(echo $GITHUB_WORKSPACE)/ArknightsGameData" >> $GITHUB_ENV
          echo "ENABLE_SSR=false" >> $GITHUB_ENV
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            dist
            .nuxt
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Generate static site
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: ${{ steps.detect-package-manager.outputs.manager }} run generate
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: dataknights
          directory: .output/public
          # Optional: Enable this to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cloudflare-pages
          path: .output/public
